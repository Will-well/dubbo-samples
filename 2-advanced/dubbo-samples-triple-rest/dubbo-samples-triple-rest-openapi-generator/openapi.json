{
  "openapi": "3.0.3",
  "info": {
    "title": "Dubbo Triple REST OpenAPI Demo",
    "description": "OpenAPI specification for Dubbo Triple REST demo service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8082",
      "description": "Local development server"
    },
    {
      "url": "http://localhost:50052",
      "description": "Dubbo Triple protocol server"
    }
  ],
  "paths": {
    "/DemoService/hello": {
      "post": {
        "tags": ["DemoService"],
        "summary": "Hello with user and count",
        "description": "Returns a greeting message with user information and count",
        "operationId": "hello",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/User"
                  },
                  "count": {
                    "type": "integer",
                    "description": "Count parameter",
                    "example": 5
                  }
                },
                "required": ["user", "count"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Hello Mr. John, 5"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/DemoService/helloUser": {
      "post": {
        "tags": ["DemoService"],
        "summary": "Hello with user only",
        "description": "Returns a greeting message with user information",
        "operationId": "helloUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Hello Mr. John"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "description": "User object with title and name",
        "properties": {
          "title": {
            "type": "string",
            "description": "User title (e.g., Mr., Ms., Dr.)",
            "example": "Mr."
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "John"
          }
        },
        "required": ["title", "name"]
      },
      "Error": {
        "type": "object",
        "description": "Error response",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["code", "message"]
      }
    }
  },
  "tags": [
    {
      "name": "DemoService",
      "description": "Demo service operations"
    }
  ]
}
